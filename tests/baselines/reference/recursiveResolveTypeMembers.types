=== tests/cases/compiler/recursiveResolveTypeMembers.ts ===
// Repro from #25291

type PromisedTuple<L extends any[], U = (...args: L) => void> =
>PromisedTuple : PromisedTuple<L, U>
>L : L
>U : U
>args : L
>L : L

    U extends (h: infer H, ...args: infer R) => [Promise<H>, ...PromisedTuple<R>] ? [] : []
>U : U
>h : H
>H : H
>args : R
>R : R
>Promise : Promise<T>
>H : No type information available!
>PromisedTuple : PromisedTuple<L, U>
>R : No type information available!

type Promised = PromisedTuple<[1, 2, 3]> 
>Promised : []
>PromisedTuple : PromisedTuple<L, U>

